<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.dras.dao.mybatis.UserGroup">
	
	<insert id="insert-UserGroup" parameterType="UserGroup">
		<selectKey resultType="long" keyProperty="id" order="BEFORE"> 
              SELECT nextval('solardras.solardras_seq') AS id 
		</selectKey>
		INSERT INTO solardras.dras_user_group
			(id, groupname, loc_id, enabled)
		VALUES
			(#{id}, #{name}, #{locationId}, #{enabled})
	</insert>

	<update id="update-UserGroup" parameterType="UserGroup">
		UPDATE solardras.dras_user_group SET
			groupname = #{name},
			loc_id = #{locationId},
			enabled = #{enabled}
		WHERE
			id = #{id}
	</update>

	<resultMap id="UserGroupFullResult" type="UserGroup">
		<id column="id" property="id"/>
		<result column="created" property="created"/>
		<result column="groupname" property="name"/>
		<result column="loc_id" property="locationId"/>
		<result column="enabled" property="enabled"/>
	</resultMap>
	
	<select id="get-UserGroup-for-id" resultMap="UserGroupFullResult" parameterType="long">
		SELECT id, created, groupname, loc_id, enabled
		FROM solardras.dras_user_group
		WHERE id = #{id}
	</select>

	<resultMap id="UserGroupFilterResult" type="UserGroup">
		<id column="id" property="id"/>
		<result column="groupname" property="name"/>
		<result column="loc_id" property="locationId"/>
		<result column="enabled" property="enabled"/>
	</resultMap>
	
	<select id="findall-UserGroup-Match" resultMap="UserGroupFilterResult" parameterType="map">
		SELECT g.id, g.groupname, g.loc_id, g.enabled
		FROM solardras.dras_user_group g
		<if test="filter.box == true">
		INNER JOIN solardras.loc l ON l.id = g.loc_id
		</if>
		<where>
			<if test="fts != null">
			fts_default @@ plainto_tsquery(#{fts})
			</if>
			<if test="filter.enabled != null">
			AND g.enabled = #{filter.enabled}
			</if>
			<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-LocationBoxFilter"/>
		</where>
		ORDER BY g.groupname
	</select>
	
	<resultMap id="UserMemberResult" type="User">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
	</resultMap>

	<select id="findall-UserGroup-Member" resultMap="UserMemberResult" parameterType="map">
		SELECT u.id, u.username
		FROM solardras.dras_user_group_member m
		LEFT OUTER JOIN solardras.dras_user u ON m.usr_id = u.id
		WHERE m.ugr_id = #{id}
		AND m.eff_id = (
			SELECT MAX(eff_id)
			FROM solardras.dras_user_group_member m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.ugr_id = #{id} 
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		)
		ORDER BY u.id
	</select>
	
	<delete id="delete-UserGroup-Member" parameterType="map">
		DELETE FROM solardras.dras_user_group_member
		WHERE ugr_id = #{id} AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-UserGroup-Member" parameterType="map">
		INSERT INTO solardras.dras_user_group_member
			(ugr_id, usr_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>
	
</mapper>
