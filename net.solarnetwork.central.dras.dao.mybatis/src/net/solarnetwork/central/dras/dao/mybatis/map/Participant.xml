<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE sqlMap 
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd"> 
<sqlMap namespace="Participant">
	
	<insert id="insert-Participant" parameterClass="Participant">
		<selectKey resultClass="long" keyProperty="id"> 
              SELECT nextval('solardras.solardras_seq') AS id 
		</selectKey>
		INSERT INTO solardras.participant 
			(id, creator, usr_id, loc_id, cap_id, ver_id
			<isNotNull prepend="," property="kind">kind</isNotNull>
			<isNotNull prepend="," property="confirmed">confirmed</isNotNull>
			<isNotNull prepend="," property="enabled">enabled</isNotNull>
			)
		VALUES
			(#id#, #creator#, #userId#, #locationId#, #capability.id#, #verificationMethodId#
			<isNotNull prepend="," property="kind">CAST(#kind# AS solardras.client_kind)</isNotNull>
			<isNotNull prepend="," property="confirmed">#confirmed#</isNotNull>
			<isNotNull prepend="," property="enabled">#enabled#</isNotNull>
			)
	</insert>

	<update id="update-Participant" parameterClass="Participant">
		UPDATE solardras.participant SET
			usr_id = #userId#,
			kind = CAST(#kind# AS solardras.client_kind),
			loc_id = #locationId#,
			cap_id = #capability.id#,
			confirmed = #confirmed#,
			ver_id = #verificationMethodId#,
			enabled = #enabled#
		WHERE
			id = #id#
	</update>

	<resultMap id="ParticipantFullResult" class="Participant" groupBy="id">
		<result column="id" property="id"/>
		<result column="created" property="created"/>
		<result column="creator" property="creator"/>
		<result column="usr_id" property="userId"/>
		<result column="kind" property="kind"/>
		<result column="loc_id" property="locationId"/>
		<result column="confirmed" property="confirmed"/>
		<result column="ver_id" property="verificationMethodId"/>
		<result column="enabled" property="enabled"/>
		<result property="capability" resultMap="Capability.CapabilityFullResult" 
			notNullColumn="cap_id"/>
	</resultMap>
	
	<select id="get-Participant-for-id" resultMap="ParticipantFullResult" parameterClass="long">
		SELECT p.id, p.created, p.creator, p.usr_id, p.kind, p.loc_id, 
			p.confirmed, p.ver_id, p.enabled, c.id as cap_id, c.created, c.dr_kind, 
			c.max_power, c.max_energy, c.max_var, c.contracted_power
		FROM solardras.participant p
		LEFT OUTER JOIN solardras.capability c ON c.id = p.cap_id
		WHERE p.id = #id#
	</select>

	<!--  Capability -->

	<select id="get-Participant-Capability" parameterClass="long" resultClass="long">
		SELECT cap_id
		FROM solardras.participant
		WHERE id = #id#
	</select>

	<!-- Filter -->

	<resultMap id="ParticipantFilterResult" class="Participant">
		<result column="id" property="id"/>
		<result column="usr_id" property="userId"/>
		<result column="loc_id" property="locationId"/>
		<result column="enabled" property="enabled"/>
	</resultMap>
	
	<sql id="fragment-Participant-WithFilters">
		<dynamic prepend="WITH">
			<isNotNull prepend="," property="filter.programId">
				pe AS (
					SELECT DISTINCT ON (m.pro_id) m.pro_id, m.eff_id
					FROM solardras.program_participant m
					INNER JOIN solardras.effective e ON e.id = m.eff_id
					WHERE e.effective &lt;= 
						<isPropertyAvailable property="date">
							#date,jdbcType=TIMESTAMP#
						</isPropertyAvailable>
						<isNotPropertyAvailable property="date">
							CURRENT_TIMESTAMP
						</isNotPropertyAvailable>
						AND m.pro_id = #filter.programId#
					ORDER BY m.pro_id, e.effective DESC
				)
			</isNotNull>
			<isNotNull prepend="," property="filter.eventId">
				ee AS (
					SELECT DISTINCT ON (m.evt_id) m.evt_id, m.eff_id
					FROM solardras.program_event_participant m
					INNER JOIN solardras.effective e ON e.id = m.eff_id
					WHERE e.effective &lt;= 
						<isPropertyAvailable property="date">
							#date,jdbcType=TIMESTAMP#
						</isPropertyAvailable>
						<isNotPropertyAvailable property="date">
							CURRENT_TIMESTAMP
						</isNotPropertyAvailable>
						AND m.evt_id = #filter.eventId#
					ORDER BY m.evt_id, e.effective DESC
				)
			</isNotNull>
			<isNotNull prepend="," property="filter.groupId">
				ge AS (
					SELECT DISTINCT ON (m.pgr_id) m.pgr_id, m.eff_id
					FROM solardras.participant_group_member m
					INNER JOIN solardras.effective e ON e.id = m.eff_id
					WHERE e.effective &lt;= 
						<isPropertyAvailable property="date">
							#date,jdbcType=TIMESTAMP#
						</isPropertyAvailable>
						<isNotPropertyAvailable property="date">
							CURRENT_TIMESTAMP
						</isNotPropertyAvailable>
						AND m.pgr_id = #filter.groupId#
					ORDER BY m.pgr_id, e.effective DESC
				)
			</isNotNull>
		</dynamic>
	</sql>
	
	<sql id="fragment-Participant-WhereFilters">
		<isNotNull property="filter.programId">
			INNER JOIN solardras.program_participant pp ON pp.par_id = p.id 
				AND pp.pro_id = #filter.programId#
			INNER JOIN pe ON pe.pro_id = pp.pro_id AND pe.eff_id = pp.eff_id
		</isNotNull>
		<isNotNull property="filter.eventId">
			INNER JOIN solardras.program_event_participant pep ON pep.par_id = p.id
				AND pep.evt_id = #filter.eventId#
			INNER JOIN ee ON ee.evt_id = pep.evt_id AND ee.eff_id = pep.eff_id
		</isNotNull>
		<isNotNull property="filter.groupId">
			INNER JOIN solardras.participant_group_member pgm ON pgm.par_id = p.id
				AND pgm.pgr_id = #filter.groupId#
			INNER JOIN ge ON ge.pgr_id = pgm.pgr_id AND ge.eff_id = pgm.eff_id
		</isNotNull>
		<dynamic prepend="WHERE">
			<isNotNull property="filter.userId">
				p.usr_id = #filter.userId#
			</isNotNull>
			<include refid="fragment-LocationBoxFilter"/>
		</dynamic>
	</sql>
	
	<select id="findall-Participant-Match" resultMap="ParticipantFilterResult" parameterClass="map">
		<include refid="fragment-Participant-WithFilters"/>
		SELECT 
		<isPropertyAvailable property="hasLocationJoin">
			DISTINCT ON (p.id)
		</isPropertyAvailable>		
			p.id, p.usr_id, p.loc_id, p.enabled
		FROM solardras.participant p
		<isPropertyAvailable property="hasLocationJoin">
		INNER JOIN solardras.loc l ON l.id = p.loc_id
		</isPropertyAvailable>
		<include refid="fragment-Participant-WhereFilters"/>
		ORDER BY p.id
	</select>

	<resultMap id="ParticipantCapabilityFilterResult" 
			class="net.solarnetwork.central.dras.support.CapableParticipant">
		<result column="par_id" property="participant.id"/>
		<result column="enabled" property="participant.enabled"/>
		<result property="capability" resultMap="Capability.CapabilityFullResult" 
			notNullColumn="cap_id"/>
		<result column="loc_id" property="locationEntity.id"/>
		<result column="loc_name" property="locationEntity.name"/>
		<result column="country" property="locationEntity.country"/>
		<result column="time_zone" property="locationEntity.timeZoneId"/>
		<result column="region" property="locationEntity.region"/>
		<result column="state_prov" property="locationEntity.stateOrProvince"/>
		<result column="locality" property="locationEntity.locality"/>
		<result column="postal_code" property="locationEntity.postalCode"/>
		<result column="gxp" property="locationEntity.gxp"/>
		<result column="icp" property="locationEntity.icp"/>
		<result column="address" property="locationEntity.street"/>
		<result column="latitude" property="locationEntity.latitude"/>
		<result column="longitude" property="locationEntity.longitude"/>
	</resultMap>
	
	<select id="findall-Participant-Match-Capability" resultMap="ParticipantCapabilityFilterResult" parameterClass="map">
		<include refid="fragment-Participant-WithFilters"/>
		SELECT DISTINCT ON (p.id) 
			p.id as par_id, p.enabled, 
			c.id as cap_id, c.created, c.dr_kind, c.max_power, c.max_energy, c.max_var, c.contracted_power,
			p.loc_id, l.loc_name, l.country, l.time_zone, l.region,
			l.state_prov, l.locality, l.postal_code, l.gxp, l.icp, l.address,
			l.latitude, l.longitude
		FROM solardras.participant p
		INNER JOIN solardras.loc l ON l.id = p.loc_id
		LEFT OUTER JOIN solardras.capability c ON c.id = p.cap_id
		<include refid="fragment-Participant-WhereFilters"/>
		ORDER BY p.id
	</select>

	<!-- Fee -->

	<select id="findall-Participant-Fee" resultMap="Fee.FeeFullResult" parameterClass="map">
		SELECT 
		<include refid="fragment-Fee-full-result"/>
		FROM solardras.fee f
		INNER JOIN solardras.participant_fee m ON m.fee_id = f.id
		WHERE m.par_id = #id#
			AND m.eff_id = (
				SELECT MAX(eff_id)
				FROM solardras.participant_fee m
				INNER JOIN solardras.effective e ON e.id = m.eff_id
				WHERE m.par_id = #id# 
					AND e.effective &lt;= 
					<isPropertyAvailable property="date">
						#date,jdbcType=TIMESTAMP#
					</isPropertyAvailable>
					<isNotPropertyAvailable property="date">
						CURRENT_TIMESTAMP
					</isNotPropertyAvailable>
			)
	</select>
	
	<delete id="delete-Participant-Fee" parameterClass="map">
		DELETE FROM solardras.participant_fee
		WHERE par_id = #id# AND eff_id = #effectiveId#
	</delete>

	<insert id="insert-Participant-Fee" parameterClass="map">
		INSERT INTO solardras.participant_fee
			(par_id, fee_id, eff_id)
		VALUES
			(#id#, #memberId#, #effectiveId#)
	</insert>

</sqlMap>
