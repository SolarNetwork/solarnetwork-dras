<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.dras.dao.mybatis.Participant">
	
	<insert id="insert-Participant" parameterType="Participant">
		<selectKey resultType="long" keyProperty="id" order="BEFORE"> 
              SELECT nextval('solardras.solardras_seq') AS id 
		</selectKey>
		INSERT INTO solardras.participant 
			(id, creator, usr_id, loc_id, cap_id, ver_id
			<if test="kind != null">,kind</if>
			<if test="confirmed != null">,confirmed</if>
			<if test="enabled != null">,enabled</if>
			)
		VALUES
			(#{id}, #{creator}, #{userId}, #{locationId}, #{capability.id}, #{verificationMethodId}
			<if test="kind != null">,CAST(#{kind} AS solardras.client_kind)</if>
			<if test="confirmed != null">,#{confirmed}</if>
			<if test="enabled != null">,#{enabled}</if>
			)
	</insert>

	<update id="update-Participant" parameterType="Participant">
		UPDATE solardras.participant SET
			usr_id = #{userId},
			kind = CAST(#{kind} AS solardras.client_kind),
			loc_id = #{locationId},
			cap_id = #{capability.id},
			confirmed = #{confirmed},
			ver_id = #{verificationMethodId},
			enabled = #{enabled}
		WHERE
			id = #{id}
	</update>

	<resultMap id="ParticipantFullResult" type="Participant">
		<id column="id" property="id"/>
		<result column="created" property="created"/>
		<result column="creator" property="creator"/>
		<result column="usr_id" property="userId"/>
		<result column="kind" property="kind"/>
		<result column="loc_id" property="locationId"/>
		<result column="confirmed" property="confirmed"/>
		<result column="ver_id" property="verificationMethodId"/>
		<result column="enabled" property="enabled"/>
		
		<association property="capability" notNullColumn="cap_id" 
			resultMap="net.solarnetwork.central.dras.dao.mybatis.Capability.CapabilityFullResult"/>
	</resultMap>
	
	<select id="get-Participant-for-id" resultMap="ParticipantFullResult" parameterType="long">
		SELECT p.id, p.created, p.creator, p.usr_id, p.kind, p.loc_id, 
			p.confirmed, p.ver_id, p.enabled, c.id as cap_id, c.created, c.dr_kind, 
			c.max_power, c.max_energy, c.max_var, c.contracted_power
		FROM solardras.participant p
		LEFT OUTER JOIN solardras.capability c ON c.id = p.cap_id
		WHERE p.id = #{id}
	</select>

	<!--  Capability -->

	<select id="get-Participant-Capability" parameterType="long" resultType="long">
		SELECT cap_id
		FROM solardras.participant
		WHERE id = #{id}
	</select>

	<!-- Filter -->

	<resultMap id="ParticipantFilterResult" type="Participant">
		<id column="id" property="id"/>
		<result column="usr_id" property="userId"/>
		<result column="loc_id" property="locationId"/>
		<result column="enabled" property="enabled"/>
	</resultMap>
	
	<sql id="fragment-Participant-WithFilters">
		<trim prefix="WITH" prefixOverrides=",">
			<if test="filter.programId != null">
				pe AS (
					SELECT DISTINCT ON (m.pro_id) m.pro_id, m.eff_id
					FROM solardras.program_participant m
					INNER JOIN solardras.effective e ON e.id = m.eff_id
					WHERE m.pro_id = #{filter.programId}
						<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
					ORDER BY m.pro_id, e.effective DESC
				)
			</if>
			<if test="filter.eventId != null">
				, ee AS (
					SELECT DISTINCT ON (m.evt_id) m.evt_id, m.eff_id
					FROM solardras.program_event_participant m
					INNER JOIN solardras.effective e ON e.id = m.eff_id
					WHERE m.evt_id = #{filter.eventId}
						<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
					ORDER BY m.evt_id, e.effective DESC
				)
			</if>
			<if test="filter.groupId != null">
				, ge AS (
					SELECT DISTINCT ON (m.pgr_id) m.pgr_id, m.eff_id
					FROM solardras.participant_group_member m
					INNER JOIN solardras.effective e ON e.id = m.eff_id
					WHERE m.pgr_id = #{filter.groupId}
						<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
					ORDER BY m.pgr_id, e.effective DESC
				)
			</if>
		</trim>
	</sql>
	
	<sql id="fragment-Participant-WhereFilters">
		<if test="filter.programId != null">
			INNER JOIN solardras.program_participant pp ON pp.par_id = p.id 
				AND pp.pro_id = #{filter.programId}
			INNER JOIN pe ON pe.pro_id = pp.pro_id AND pe.eff_id = pp.eff_id
		</if>
		<if test="filter.eventId != null">
			INNER JOIN solardras.program_event_participant pep ON pep.par_id = p.id
				AND pep.evt_id = #{filter.eventId}
			INNER JOIN ee ON ee.evt_id = pep.evt_id AND ee.eff_id = pep.eff_id
		</if>
		<if test="filter.groupId != null">
			INNER JOIN solardras.participant_group_member pgm ON pgm.par_id = p.id
				AND pgm.pgr_id = #{filter.groupId}
			INNER JOIN ge ON ge.pgr_id = pgm.pgr_id AND ge.eff_id = pgm.eff_id
		</if>
		<where>
			<if test="filter.userId != null">
				p.usr_id = #{filter.userId}
			</if>
			<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-LocationBoxFilter"/>
		</where>
	</sql>
	
	<select id="findall-Participant-Match" resultMap="ParticipantFilterResult" parameterType="map">
		<include refid="fragment-Participant-WithFilters"/>
		SELECT 
		<if test="hasLocationJoin != null">
			DISTINCT ON (p.id)
		</if>		
			p.id, p.usr_id, p.loc_id, p.enabled
		FROM solardras.participant p
		<if test="hasLocationJoin != null">
		INNER JOIN solardras.loc l ON l.id = p.loc_id
		</if>
		<include refid="fragment-Participant-WhereFilters"/>
		ORDER BY p.id
	</select>

	<resultMap id="ParticipantCapabilityFilterResult" 
			type="net.solarnetwork.central.dras.support.CapableParticipant">
		<result column="par_id" property="participant.id"/>
		<result column="enabled" property="participant.enabled"/>
		<result column="loc_id" property="locationEntity.id"/>
		<result column="loc_name" property="locationEntity.name"/>
		<result column="country" property="locationEntity.country"/>
		<result column="time_zone" property="locationEntity.timeZoneId"/>
		<result column="region" property="locationEntity.region"/>
		<result column="state_prov" property="locationEntity.stateOrProvince"/>
		<result column="locality" property="locationEntity.locality"/>
		<result column="postal_code" property="locationEntity.postalCode"/>
		<result column="gxp" property="locationEntity.gxp"/>
		<result column="icp" property="locationEntity.icp"/>
		<result column="address" property="locationEntity.street"/>
		<result column="latitude" property="locationEntity.latitude"/>
		<result column="longitude" property="locationEntity.longitude"/>
		
		<association property="capability" notNullColumn="cap_id" 
			resultMap="net.solarnetwork.central.dras.dao.mybatis.Capability.CapabilityFullResult"/>
	</resultMap>
	
	<select id="findall-Participant-Match-Capability" resultMap="ParticipantCapabilityFilterResult" parameterType="map">
		<include refid="fragment-Participant-WithFilters"/>
		SELECT DISTINCT ON (p.id) 
			p.id as par_id, p.enabled, 
			c.id as cap_id, c.created, c.dr_kind, c.max_power, c.max_energy, c.max_var, c.contracted_power,
			p.loc_id, l.loc_name, l.country, l.time_zone, l.region,
			l.state_prov, l.locality, l.postal_code, l.gxp, l.icp, l.address,
			l.latitude, l.longitude
		FROM solardras.participant p
		INNER JOIN solardras.loc l ON l.id = p.loc_id
		LEFT OUTER JOIN solardras.capability c ON c.id = p.cap_id
		<include refid="fragment-Participant-WhereFilters"/>
		ORDER BY p.id
	</select>

	<!-- Fee -->

	<select id="findall-Participant-Fee" resultMap="net.solarnetwork.central.dras.dao.mybatis.Fee.FeeFullResult" parameterType="map">
		SELECT 
		<include refid="net.solarnetwork.central.dras.dao.mybatis.Fee.fragment-Fee-full-result"/>
		FROM solardras.fee f
		INNER JOIN solardras.participant_fee m ON m.fee_id = f.id
		WHERE m.par_id = #{id}
			AND m.eff_id = (
				SELECT MAX(eff_id)
				FROM solardras.participant_fee m
				INNER JOIN solardras.effective e ON e.id = m.eff_id
				WHERE m.par_id = #{id} 
					<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			)
	</select>
	
	<delete id="delete-Participant-Fee" parameterType="map">
		DELETE FROM solardras.participant_fee
		WHERE par_id = #{id} AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-Participant-Fee" parameterType="map">
		INSERT INTO solardras.participant_fee
			(par_id, fee_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>

</mapper>
