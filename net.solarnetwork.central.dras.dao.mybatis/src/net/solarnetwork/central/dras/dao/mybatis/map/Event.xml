<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.dras.dao.mybatis.Event">

	<insert id="insert-Event" parameterType="Event">
		<selectKey resultType="long" keyProperty="id" order="BEFORE"> 
              SELECT nextval('solardras.solardras_seq') AS id 
		</selectKey>
		INSERT INTO solardras.program_event 
			(id, creator, pro_id, event_name, initiator,
			notif_date, start_date, end_date
			<if test="enabled != null">,enabled</if>
			<if test="test != null">,test</if>
			)
		VALUES
			(#{id}, #{creator}, #{programId}, #{name}, #{initiator},
			#{notificationDate}, #{eventDate}, #{endDate}
			<if test="enabled != null">,#{enabled}</if>
			<if test="test != null">,#{test}</if>
			)
	</insert>

	<update id="update-Event" parameterType="Event">
		UPDATE solardras.program_event SET
			pro_id = #{programId}, 
			event_name = #{name}, 
			initiator = #{initiator},
			notif_date = #{notificationDate}, 
			start_date = #{eventDate}, 
			end_date = #{endDate}
			<if test="enabled != null">,enabled = #{enabled}</if>
			<if test="test != null">,test = #{test}</if>
			
		WHERE
			id = #{id}
	</update>

	<resultMap id="EventFullResult" type="Event">
		<id column="id" property="id"/>
		<result column="created" property="created"/>
		<result column="creator" property="creator"/>
		<result column="pro_id" property="programId"/>
		<result column="event_name" property="name"/>
		<result column="initiator" property="initiator"/>
		<result column="notif_date" property="notificationDate"/>
		<result column="start_date" property="eventDate"/>
		<result column="end_date" property="endDate"/>
		<result column="enabled" property="enabled"/>
		<result column="test" property="test"/>
	</resultMap>
	
	<select id="get-Event-for-id" resultMap="EventFullResult" parameterType="long">
		SELECT id, created, creator, pro_id, event_name, initiator,
			notif_date, start_date, end_date, enabled, test
		FROM solardras.program_event
		WHERE id = #{id}
	</select>
	
	<!--  Filter search -->

	<select id="findall-Event-Match" resultMap="EventFullResult" parameterType="map">
		<if test="filter.userId != null">
			WITH prog_user AS (
				SELECT DISTINCT ON (m.pro_id) m.pro_id
				FROM solardras.program_user m
				INNER JOIN solardras.effective e ON e.id = m.eff_id
				WHERE 
					m.usr_id = #{filter.userId}
					<if test="filter.programId != null">AND m.pro_id = #{filter.programId}</if>
					<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
				ORDER BY m.pro_id, e.effective DESC
			)
		</if>
		SELECT 
			e.id, e.created, e.creator, e.pro_id, e.event_name, e.initiator,
			e.notif_date, e.start_date, e.end_date, e.enabled, e.test
		FROM solardras.program_event e
		<if test="filter.userId != null">
			INNER JOIN prog_user ON prog_user.pro_id = e.pro_id
		</if>
		<where>
			<if test="fts != null">
				e.fts_default @@ plainto_tsquery(#{fts})
			</if>
			<if test="filter.programId != null">
				AND e.pro_id = #{filter.programId}
			</if>
		</where>
		ORDER BY e.id
	</select>
	
	<!-- Event users -->

	<resultMap id="UserMemberResult" type="User">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
	</resultMap>

	<select id="findall-Event-Member" resultMap="UserMemberResult" parameterType="map">
		SELECT u.id, u.username
		FROM solardras.program_event_user m
		LEFT OUTER JOIN solardras.dras_user u ON u.id = m.usr_id
		WHERE m.evt_id = #{id}
		AND m.eff_id = (
			SELECT MAX(eff_id)
			FROM solardras.program_event_user m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id} 
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		)
		ORDER BY u.id
	</select>
	
	<delete id="delete-Event-Member" parameterType="map">
		DELETE FROM solardras.program_event_user
		WHERE evt_id = #{id}  AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-Event-Member" parameterType="map">
		INSERT INTO solardras.program_event_user
			(evt_id, usr_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>
	
	<!-- Event user groups -->

	<resultMap id="UserGroupMemberResult" type="UserGroup">
		<id column="id" property="id"/>
		<result column="groupname" property="name"/>
		<result column="loc_id" property="locationId"/>
	</resultMap>

	<select id="findall-Event-UserGroup" resultMap="UserGroupMemberResult" parameterType="map">
		SELECT u.id, u.groupname, u.loc_id
		FROM solardras.program_event_user_group m
		LEFT OUTER JOIN solardras.dras_user_group u ON u.id = m.ugr_id
		WHERE m.evt_id = #{id}
		AND m.eff_id = (
			SELECT MAX(eff_id)
			FROM solardras.program_event_user_group m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id} 
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		)
		ORDER BY u.id
	</select>
	
	<delete id="delete-Event-UserGroup" parameterType="map">
		DELETE FROM solardras.program_event_user_group
		WHERE evt_id = #{id}  AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-Event-UserGroup" parameterType="map">
		INSERT INTO solardras.program_event_user_group
			(evt_id, ugr_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>
	
	<!-- Event participants -->

	<resultMap id="ParticipantMemberResult" type="Participant">
		<id column="id" property="id"/>
		<result column="usr_id" property="userId"/>
		<result column="loc_id" property="locationId"/>
	</resultMap>

	<select id="findall-Event-Participant" resultMap="ParticipantMemberResult" parameterType="map">
		SELECT p.id, p.usr_id, p.loc_id
		FROM solardras.program_event_participant m
		LEFT OUTER JOIN solardras.participant p ON p.id = m.par_id
		WHERE m.evt_id = #{id}
		AND m.eff_id = (
			SELECT MAX(eff_id)
			FROM solardras.program_event_participant m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id} 
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		)
		ORDER BY p.id
	</select>
	
	<delete id="delete-Event-Participant" parameterType="map">
		DELETE FROM solardras.program_event_participant
		WHERE evt_id = #{id} AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-Event-Participant" parameterType="map">
		INSERT INTO solardras.program_event_participant
			(evt_id, par_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>

	<!-- Event participant groups -->

	<resultMap id="ParticipantGroupMemberResult" type="ParticipantGroup">
		<id column="id" property="id"/>
		<result column="loc_id" property="locationId"/>
	</resultMap>

	<select id="findall-Event-ParticipantGroup" resultMap="ParticipantGroupMemberResult" parameterType="map">
		SELECT u.id, u.loc_id
		FROM solardras.program_event_participant_group m
		LEFT OUTER JOIN solardras.participant_group u ON u.id = m.pgr_id
		WHERE m.evt_id = #{id}
		AND m.eff_id = (
			SELECT MAX(eff_id)
			FROM solardras.program_event_participant_group m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id} 
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		)
		ORDER BY u.id
	</select>
	
	<delete id="delete-Event-ParticipantGroup" parameterType="map">
		DELETE FROM solardras.program_event_participant_group
		WHERE evt_id = #{id}  AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-Event-ParticipantGroup" parameterType="map">
		INSERT INTO solardras.program_event_participant_group
			(evt_id, pgr_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>

	<!-- Event locations -->

	<select id="findall-Event-Location" resultMap="net.solarnetwork.central.dras.dao.mybatis.Location.LocationFullResult" parameterType="map">
		SELECT l.id, l.created, l.loc_name, l.country, l.time_zone, l.region,
			l.state_prov, l.locality, l.postal_code, l.gxp, l.icp, l.address,
			l.latitude, l.longitude
		FROM solardras.program_event_loc m
		LEFT OUTER JOIN solardras.loc l ON l.id = m.loc_id
		WHERE m.evt_id = #{id}
		AND m.eff_id = (
			SELECT MAX(eff_id)
			FROM solardras.program_event_loc m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id} 
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		)
		ORDER BY l.id
	</select>
	
	<delete id="delete-Event-Location" parameterType="map">
		DELETE FROM solardras.program_event_loc
		WHERE evt_id = #{id} AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-Event-Location" parameterType="map">
		INSERT INTO solardras.program_event_loc
			(evt_id, loc_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>
	
	<!-- Event targets -->

	<select id="findall-Event-EventTargets" 
		resultMap="net.solarnetwork.central.dras.dao.mybatis.EventTargets.EventTargetsFullResult" parameterType="map">
		SELECT t.id, t.created, t.evr_id, CAST(t.end_offset AS text),
			CAST(v.event_offset AS text), v.target_value
		FROM solardras.event_target t
		INNER JOIN solardras.program_event_target m ON m.eta_id = t.id
		LEFT OUTER JOIN solardras.event_target_value v ON v.eta_id = t.id
		WHERE m.evt_id = #{id}
			AND m.eff_id = (
				SELECT MAX(eff_id)
				FROM solardras.program_event_target m
				INNER JOIN solardras.effective e ON e.id = m.eff_id
				WHERE m.evt_id = #{id} 
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		ORDER BY t.id, v.event_offset
		)
	</select>
	
	<delete id="delete-Event-EventTargets" parameterType="map">
		DELETE FROM solardras.program_event_target
		WHERE evt_id = #{id} AND eff_id = #{effectiveId}
	</delete>

	<insert id="insert-Event-EventTargets" parameterType="map">
		INSERT INTO solardras.program_event_target
			(evt_id, eta_id, eff_id)
		VALUES
			(#{id}, #{memberId}, #{effectiveId})
	</insert>
	
	<select id="findall-Event-EventExecutionTargets" 
		resultMap="net.solarnetwork.central.dras.dao.mybatis.EventTargets.EventExecutionTargetsFullResult" parameterType="map">
		SELECT t.id, CAST(r.kind AS text) as rule_kind, r.rule_name, 
			CAST(v.event_offset AS text), v.target_value
		FROM solardras.event_target t
		INNER JOIN solardras.event_rule r ON r.id = t.evr_id
		INNER JOIN solardras.program_event_target m ON m.eta_id = t.id
		LEFT OUTER JOIN solardras.event_target_value v ON v.eta_id = t.id
		WHERE m.evt_id = #{id}
			AND m.eff_id = (
				SELECT MAX(eff_id)
				FROM solardras.program_event_target m
				INNER JOIN solardras.effective e ON e.id = m.eff_id
				WHERE m.evt_id = #{id} 
					<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
		ORDER BY v.event_offset ASC
		)
	</select>
	
	<!-- Event users -->
	
	<select id="findall-Event-User" parameterType="map" resultMap="UserMemberResult">
		WITH
		eu AS (
			SELECT DISTINCT ON (m.evt_id) m.evt_id, m.eff_id
			FROM solardras.program_event_user m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			WHERE m.evt_id = #{id}
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			ORDER BY m.evt_id, e.effective DESC
		),
		eug AS (
			SELECT DISTINCT ON (m.evt_id) m.evt_id, m.eff_id
			FROM solardras.program_event_user_group m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id}
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			ORDER BY m.evt_id, e.effective DESC
		),
		ep AS (
			SELECT DISTINCT ON (m.evt_id) m.evt_id, m.eff_id
			FROM solardras.program_event_participant m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id}
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			ORDER BY m.evt_id, e.effective DESC
		),
		epg AS (
			SELECT DISTINCT ON (m.evt_id) m.evt_id, m.eff_id
			FROM solardras.program_event_participant_group m
			INNER JOIN solardras.effective e ON e.id = m.eff_id
			WHERE m.evt_id = #{id}
				<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			ORDER BY m.evt_id, e.effective DESC
		)
		
		/* Event users */
		SELECT u.id, u.username
		FROM solardras.dras_user u
		INNER JOIN solardras.program_event_user peu 
			ON peu.evt_id = #{id} AND peu.usr_id = u.id
		INNER JOIN eu ON eu.evt_id = peu.evt_id AND eu.eff_id = peu.eff_id
		
		UNION
		
		/* Event users in user groups */
		SELECT u.id, u.username
		FROM solardras.dras_user u
		INNER JOIN solardras.dras_user_group_member ugm ON ugm.usr_id = u.id
			AND ugm.eff_id = (
				SELECT MAX(eff_id)
				FROM solardras.dras_user_group_member m
				INNER JOIN solardras.effective e ON e.id = m.eff_id
				WHERE m.ugr_id = ugm.ugr_id 
					<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			)
		INNER JOIN solardras.program_event_user_group peug 
			ON peug.evt_id = #{id} AND peug.ugr_id = ugm.ugr_id
		INNER JOIN eug ON eug.evt_id = peug.evt_id AND eug.eff_id = peug.eff_id
		
		UNION
		
		/* Event users for event participants */
		
		SELECT DISTINCT ON (u.id) u.id, u.username
		FROM solardras.dras_user u
		INNER JOIN solardras.participant p ON p.usr_id = u.id
		INNER JOIN solardras.program_event_participant pep
			ON pep.evt_id = #{id} AND pep.par_id = p.id
		INNER JOIN ep ON ep.evt_id = pep.evt_id AND ep.eff_id = pep.eff_id
		
		UNION
		
		/* Event users for event participant groups */
		
		SELECT DISTINCT ON (u.id) u.id, u.username
		FROM solardras.dras_user u
		INNER JOIN solardras.participant p ON p.usr_id = u.id
		INNER JOIN solardras.participant_group_member pgm ON pgm.par_id = p.id
			AND pgm.eff_id = (
				SELECT MAX(eff_id)
				FROM solardras.participant_group_member m
				INNER JOIN solardras.effective e ON e.id = m.eff_id
				WHERE m.pgr_id = pgm.pgr_id 
					<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-effective-date-where-lte"/>
			)
		INNER JOIN solardras.program_event_participant_group pepg 
			ON pepg.evt_id = #{id} AND pepg.pgr_id = pgm.pgr_id
		INNER JOIN epg ON epg.evt_id = pepg.evt_id AND epg.eff_id = pepg.eff_id
	</select>
	
</mapper>
