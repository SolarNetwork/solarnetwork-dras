<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.dras.dao.mybatis.Location">
	
	<insert id="insert-Location" parameterType="Location">
		<selectKey resultType="long" keyProperty="id" order="BEFORE"> 
              SELECT nextval('solardras.solardras_seq') AS id 
		</selectKey>
		INSERT INTO solardras.loc 
			(id, loc_name, country, time_zone, region, state_prov, locality,
			postal_code, gxp, icp, address, latitude, longitude)
		VALUES
			(#{id}, #{name}, #{country}, #{timeZoneId}, #{region}, #{stateOrProvince},
			#{locality}, #{postalCode}, #{gxp}, #{icp}, #{street}, #{latitude},
			#{longitude})
	</insert>

	<update id="update-Location" parameterType="Location">
		UPDATE solardras.loc SET
			loc_name = #{name}, 
			country = #{country}, 
			time_zone = #{timeZoneId}, 
			region = #{region},
			state_prov = #{stateOrProvince},
			locality = #{locality},
			postal_code = #{postalCode}, 
			gxp = #{gxp}, 
			icp = #{icp}, 
			address = #{street}, 
			latitude = #{latitude},
			longitude = #{longitude}
		WHERE
			id = #{id}
	</update>

	<resultMap id="LocationFullResult" type="Location">
		<id column="id" property="id"/>
		<result column="created" property="created"/>
		<result column="loc_name" property="name"/>
		<result column="country" property="country"/>
		<result column="time_zone" property="timeZoneId"/>
		<result column="region" property="region"/>
		<result column="state_prov" property="stateOrProvince"/>
		<result column="locality" property="locality"/>
		<result column="postal_code" property="postalCode"/>
		<result column="gxp" property="gxp"/>
		<result column="icp" property="icp"/>
		<result column="address" property="street"/>
		<result column="latitude" property="latitude"/>
		<result column="longitude" property="longitude"/>
	</resultMap>
	
	<select id="get-Location-for-id" resultMap="LocationFullResult" parameterType="long">
		SELECT id, created, loc_name, country, time_zone, region,
			state_prov, locality, postal_code, gxp, icp, address,
			latitude, longitude
		FROM solardras.loc
		WHERE id = #{id}
	</select>

	<resultMap id="LocationFilterResult" type="Location">
		<id column="id" property="id"/>
		<result column="loc_name" property="name"/>
		<result column="postal_code" property="postalCode"/>
		<result column="gxp" property="gxp"/>
		<result column="icp" property="icp"/>
		<result column="address" property="street"/>
		<result column="latitude" property="latitude"/>
		<result column="longitude" property="longitude"/>
	</resultMap>
	
	<select id="findall-Location-Match" resultMap="LocationFilterResult" parameterType="map">
		SELECT l.id, l.loc_name, l.postal_code, l.gxp, l.icp, l.address, l.latitude, l.longitude
		FROM solardras.loc l
		<where>
			<!--  TODO: FTS on name -->
			<if test="filter.name != null">l.loc_name = #{filter.name}</if>
			<if test="filter.ids != null">
				AND l.id IN
				<foreach item="item" collection="filter.ids"
					open="(" separator="," close=")">#{item}</foreach>
			</if>
			<include refid="net.solarnetwork.central.dras.dao.mybatis.fragment-LocationBoxFilter"/>
		</where>
		ORDER BY l.id
	</select>
	
</mapper>
